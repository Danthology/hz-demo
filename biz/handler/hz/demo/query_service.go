// Code generated by hertz generator.

package demo

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"hz/demo/biz/model/hz/demo"
)

// QueryMsg .
// @router msg/query [GET]
func QueryMsg(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demo.QueryRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := &demo.QueryResponse{
		Num:  100,
		Code: "test",
	}

	c.JSON(consts.StatusOK, resp)
}

// InsertMsg .
// @router msg/insert [POST]
func InsertMsg(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demo.QueryRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demo.InsertResponse)

	c.JSON(consts.StatusOK, resp)
}

// DeleteMsg .
// @router msg/delete [POST]
func DeleteMsg(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demo.QueryRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demo.DeleteResponse)

	c.JSON(consts.StatusOK, resp)
}

// UpdateMsg .
// @router msg/update [POST]
func UpdateMsg(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demo.QueryRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demo.UpdateResponse)

	c.JSON(consts.StatusOK, resp)
}
