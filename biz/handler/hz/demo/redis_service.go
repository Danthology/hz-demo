// Code generated by hertz generator.

package demo

import (
	"context"
	"hz/demo/biz/mw"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"hz/demo/biz/model/hz/demo"
)

// AddMsg .
// @router redis/add [GET]
func AddMsg(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demo.AddRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demo.AddResponse)

	_, err = mw.RDS.Set(ctx, req.GetK(), req.GetV(), -1).Result()
	if err != nil {
		resp = &demo.AddResponse{
			Code: demo.Code_ParamInvalid,
			Des:  "插入失败",
		}
		c.JSON(consts.StatusOK, resp)
		return
	}

	c.JSON(consts.StatusOK, resp)
}

// GetMsg .
// @router redis/add [GET]
func GetMsg(ctx context.Context, c *app.RequestContext) {
	var err error
	var req demo.GetRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(demo.GetResponse)

	v, err := mw.RDS.Get(ctx, req.GetK()).Result()
	if err != nil {
		resp = &demo.GetResponse{
			Code: demo.Code_ParamInvalid,
			Des:  "获取失败",
		}
		c.JSON(consts.StatusOK, resp)
		return
	}

	resp = &demo.GetResponse{
		Code: demo.Code_Success,
		Des:  "获取成功",
		V:    v,
	}

	c.JSON(consts.StatusOK, resp)
}
